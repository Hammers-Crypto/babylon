syntax = "proto3";
package babylon.checkpointing.v1;

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/babylonchain/babylon/x/checkpointing/types";

// RawCheckpoint wraps the multi sig with meta data.
message RawCheckpoint {
  option (gogoproto.equal)            = true;

  // epoch_num defines the epoch number the raw checkpoint is for
  uint64 epoch_num = 1;
  // last_commit_hash defines the 'LastCommitHash' that individual bls sigs are signed on
  bytes last_commit_hash = 2;
  // bitmap defines the bitmap that indicates the signers of the bls multi sig
  bytes bitmap = 3;
  // bls_multi_sig defines the multi sig that is aggregated from individual bls sigs
  bytes bls_multi_sig = 4;
  // status defines the status of the checkpoint
  uint32 status = 5;
}

// BlsSig wraps the bls sig with meta data.
message BlsSig {
  // epoch_num defines the epoch number that the bls sig is signed on
  uint64 epoch_num = 1;
  // last_commit_hash defines the 'LastCommitHash' that the bls sig is signed on
  bytes last_commit_hash = 2;
  // bls_sig defines the actual bls sig
  bytes bls_sig = 3;
  // can't find cosmos_proto.scalar when compiling due to cosmos v0.45.4 does not support scalar
  // string signer_address = 5 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // the signer_address defines the address of the signer
  string signer_address = 5;
}
