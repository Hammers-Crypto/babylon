syntax = "proto3";
package babylon.epoching.v1;

import "gogoproto/gogo.proto";
import "cosmos/staking/v1beta1/tx.proto";

option go_package = "github.com/babylonchain/babylon/x/epoching/types";

message Epoch {
  uint64 epoch_number = 1;
  uint64 current_epoch_interval = 2;
  uint64 first_block_height = 3;
}

// QueuedMessage is a message that can change the validator set and is delayed to the epoch boundary
message QueuedMessage {
  // tx_id is the ID of the tx that contains the message
  bytes tx_id = 1;
  // msg_id is the original message ID, i.e., hash of the marshaled message
  bytes msg_id = 2;
  // block_height is the height when this msg is submitted to Babylon
  uint64 block_height = 3;
  // msg is the actual message that is sent by a user and is queued by the epoching module
  oneof msg {
    cosmos.staking.v1beta1.MsgCreateValidator msg_create_validator = 4;
    cosmos.staking.v1beta1.MsgDelegate msg_delegate = 5;
    cosmos.staking.v1beta1.MsgUndelegate msg_undelegate = 6;
    cosmos.staking.v1beta1.MsgBeginRedelegate msg_begin_redelegate = 7;
    // TODO: after we bump to Cosmos SDK v0.46, add MsgCancelUnbondingDelegation
  }
}

message ValidatorLifecycle {
  // val_addr is the address of the validator
  string val_addr = 1;

  // bonding_request_height is the block height when this validator's bonding request is received by Babylon
  // this happens when Babylon nodes commit the block that includes the `MsgWrappedCreateValidator` msg
  uint64 bonding_request_height = 2;
  // bonded_height is the block height when the validator's bonding request is handled by Babylon and this validator becomes bonded
  // this happens at the end of an epoch
  uint64 bonded_height = 3;

  // unbonding_request_height is the block height when this validator's unbonding request is received by Babylon
  // this happens when Babylon nodes commit the block that includes the `MsgUndelegate` msg
  uint64 unbonding_request_height = 4;
  // unbonding_height is the block height when the validator's unbonding request is handled by Babylon and this validator becomes unbonding
  // this happens at the end of an epoch
  uint64 unbonding_height = 5;

  // unbonded_height is the block height when when this validator becomes uunbonded
  // this happens when the epoch's checkpoint is finalised
  uint64 unbonded_height = 6;
}