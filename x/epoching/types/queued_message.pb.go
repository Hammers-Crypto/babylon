// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: babylon/epoching/v1/queued_message.proto

package types

import (
	fmt "fmt"
	types "github.com/cosmos/cosmos-sdk/x/staking/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// QueuedMessage is a message that can change the validator set and is delayed to the epoch boundary
type QueuedMessage struct {
	// Types that are valid to be assigned to Msg:
	//	*QueuedMessage_MsgCreateValidator
	//	*QueuedMessage_MsgDelegate
	//	*QueuedMessage_MsgUndelegate
	//	*QueuedMessage_MsgBeginRedelegate
	Msg isQueuedMessage_Msg `protobuf_oneof:"msg"`
}

func (m *QueuedMessage) Reset()         { *m = QueuedMessage{} }
func (m *QueuedMessage) String() string { return proto.CompactTextString(m) }
func (*QueuedMessage) ProtoMessage()    {}
func (*QueuedMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbb081aaacd53c75, []int{0}
}
func (m *QueuedMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueuedMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueuedMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueuedMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueuedMessage.Merge(m, src)
}
func (m *QueuedMessage) XXX_Size() int {
	return m.Size()
}
func (m *QueuedMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_QueuedMessage.DiscardUnknown(m)
}

var xxx_messageInfo_QueuedMessage proto.InternalMessageInfo

type isQueuedMessage_Msg interface {
	isQueuedMessage_Msg()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type QueuedMessage_MsgCreateValidator struct {
	MsgCreateValidator *types.MsgCreateValidator `protobuf:"bytes,1,opt,name=msg_create_validator,json=msgCreateValidator,proto3,oneof" json:"msg_create_validator,omitempty"`
}
type QueuedMessage_MsgDelegate struct {
	MsgDelegate *types.MsgDelegate `protobuf:"bytes,2,opt,name=msg_delegate,json=msgDelegate,proto3,oneof" json:"msg_delegate,omitempty"`
}
type QueuedMessage_MsgUndelegate struct {
	MsgUndelegate *types.MsgUndelegate `protobuf:"bytes,3,opt,name=msg_undelegate,json=msgUndelegate,proto3,oneof" json:"msg_undelegate,omitempty"`
}
type QueuedMessage_MsgBeginRedelegate struct {
	MsgBeginRedelegate *types.MsgBeginRedelegate `protobuf:"bytes,4,opt,name=msg_begin_redelegate,json=msgBeginRedelegate,proto3,oneof" json:"msg_begin_redelegate,omitempty"`
}

func (*QueuedMessage_MsgCreateValidator) isQueuedMessage_Msg() {}
func (*QueuedMessage_MsgDelegate) isQueuedMessage_Msg()        {}
func (*QueuedMessage_MsgUndelegate) isQueuedMessage_Msg()      {}
func (*QueuedMessage_MsgBeginRedelegate) isQueuedMessage_Msg() {}

func (m *QueuedMessage) GetMsg() isQueuedMessage_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *QueuedMessage) GetMsgCreateValidator() *types.MsgCreateValidator {
	if x, ok := m.GetMsg().(*QueuedMessage_MsgCreateValidator); ok {
		return x.MsgCreateValidator
	}
	return nil
}

func (m *QueuedMessage) GetMsgDelegate() *types.MsgDelegate {
	if x, ok := m.GetMsg().(*QueuedMessage_MsgDelegate); ok {
		return x.MsgDelegate
	}
	return nil
}

func (m *QueuedMessage) GetMsgUndelegate() *types.MsgUndelegate {
	if x, ok := m.GetMsg().(*QueuedMessage_MsgUndelegate); ok {
		return x.MsgUndelegate
	}
	return nil
}

func (m *QueuedMessage) GetMsgBeginRedelegate() *types.MsgBeginRedelegate {
	if x, ok := m.GetMsg().(*QueuedMessage_MsgBeginRedelegate); ok {
		return x.MsgBeginRedelegate
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*QueuedMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*QueuedMessage_MsgCreateValidator)(nil),
		(*QueuedMessage_MsgDelegate)(nil),
		(*QueuedMessage_MsgUndelegate)(nil),
		(*QueuedMessage_MsgBeginRedelegate)(nil),
	}
}

func init() {
	proto.RegisterType((*QueuedMessage)(nil), "babylon.epoching.v1.QueuedMessage")
}

func init() {
	proto.RegisterFile("babylon/epoching/v1/queued_message.proto", fileDescriptor_dbb081aaacd53c75)
}

var fileDescriptor_dbb081aaacd53c75 = []byte{
	// 342 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xbd, 0x4e, 0xc3, 0x30,
	0x10, 0x80, 0x93, 0xb6, 0x30, 0xa4, 0x94, 0x21, 0x74, 0xa8, 0x3a, 0xa4, 0x08, 0x84, 0x54, 0x31,
	0xd8, 0x14, 0x36, 0xc6, 0xc2, 0x10, 0x21, 0x15, 0x89, 0x48, 0x30, 0x30, 0x10, 0x39, 0xe9, 0xc9,
	0x8d, 0xa8, 0xe3, 0x12, 0x3b, 0x55, 0xfb, 0x16, 0x3c, 0x02, 0x8f, 0xc3, 0xd8, 0x91, 0x11, 0xb5,
	0x0b, 0x4f, 0xc0, 0x8c, 0xec, 0xfc, 0xb4, 0x02, 0xa9, 0x6c, 0xbe, 0xbb, 0xef, 0xbe, 0xd3, 0xe9,
	0x6c, 0x75, 0x03, 0x12, 0xcc, 0xc7, 0x3c, 0xc6, 0x30, 0xe1, 0xe1, 0x28, 0x8a, 0x29, 0x9e, 0xf6,
	0xf0, 0x4b, 0x0a, 0x29, 0x0c, 0x7d, 0x06, 0x42, 0x10, 0x0a, 0x68, 0x92, 0x70, 0xc9, 0xed, 0x83,
	0x9c, 0x44, 0x05, 0x89, 0xa6, 0xbd, 0x76, 0x93, 0x72, 0xca, 0x75, 0x1d, 0xab, 0x57, 0x86, 0xb6,
	0x3b, 0x21, 0x17, 0x8c, 0x0b, 0x2c, 0x24, 0x79, 0xce, 0x94, 0x01, 0x48, 0xd2, 0xc3, 0x72, 0x96,
	0x01, 0x47, 0xdf, 0x15, 0xab, 0x71, 0xa7, 0x87, 0x0c, 0xb2, 0x19, 0xf6, 0x93, 0xd5, 0x64, 0x82,
	0xfa, 0x61, 0x02, 0x44, 0x82, 0x3f, 0x25, 0xe3, 0x68, 0x48, 0x24, 0x4f, 0x5a, 0xe6, 0xa1, 0xd9,
	0xad, 0x9f, 0x9f, 0xa2, 0xcc, 0x88, 0x72, 0x23, 0xca, 0x8d, 0x68, 0x20, 0xe8, 0x95, 0x6e, 0x79,
	0x28, 0x3a, 0x5c, 0xc3, 0xb3, 0xd9, 0x9f, 0xac, 0xed, 0x5a, 0x7b, 0xca, 0x3f, 0x84, 0x31, 0x50,
	0x22, 0xa1, 0x55, 0xd1, 0xde, 0xe3, 0x2d, 0xde, 0xeb, 0x1c, 0x75, 0x0d, 0xaf, 0xce, 0xd6, 0xa1,
	0x7d, 0x6b, 0xed, 0x2b, 0x53, 0x1a, 0x97, 0xae, 0xaa, 0x76, 0x9d, 0x6c, 0x71, 0xdd, 0x97, 0xb0,
	0x6b, 0x78, 0x0d, 0xb6, 0x99, 0x28, 0x36, 0x0f, 0x80, 0x46, 0xb1, 0x9f, 0x40, 0x69, 0xad, 0xfd,
	0xbb, 0x79, 0x5f, 0xb5, 0x78, 0xb0, 0xa1, 0x56, 0x9b, 0xff, 0xca, 0x5e, 0xd6, 0xbe, 0xde, 0x3a,
	0x66, 0x7f, 0xc7, 0xaa, 0xaa, 0xda, 0xcd, 0xfb, 0xd2, 0x31, 0x17, 0x4b, 0xc7, 0xfc, 0x5c, 0x3a,
	0xe6, 0xeb, 0xca, 0x31, 0x16, 0x2b, 0xc7, 0xf8, 0x58, 0x39, 0xc6, 0xe3, 0x19, 0x8d, 0xe4, 0x28,
	0x0d, 0x50, 0xc8, 0x19, 0xce, 0x2f, 0x1d, 0x8e, 0x48, 0x14, 0x17, 0x01, 0x9e, 0xad, 0xbf, 0x88,
	0x9c, 0x4f, 0x40, 0x04, 0xbb, 0xfa, 0x96, 0x17, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x8b, 0xc7,
	0x9a, 0xd6, 0x43, 0x02, 0x00, 0x00,
}

func (this *QueuedMessage) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*QueuedMessage)
	if !ok {
		that2, ok := that.(QueuedMessage)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.Msg == nil {
		if this.Msg != nil {
			return false
		}
	} else if this.Msg == nil {
		return false
	} else if !this.Msg.Equal(that1.Msg) {
		return false
	}
	return true
}
func (this *QueuedMessage_MsgCreateValidator) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*QueuedMessage_MsgCreateValidator)
	if !ok {
		that2, ok := that.(QueuedMessage_MsgCreateValidator)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.MsgCreateValidator.Equal(that1.MsgCreateValidator) {
		return false
	}
	return true
}
func (this *QueuedMessage_MsgDelegate) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*QueuedMessage_MsgDelegate)
	if !ok {
		that2, ok := that.(QueuedMessage_MsgDelegate)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.MsgDelegate.Equal(that1.MsgDelegate) {
		return false
	}
	return true
}
func (this *QueuedMessage_MsgUndelegate) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*QueuedMessage_MsgUndelegate)
	if !ok {
		that2, ok := that.(QueuedMessage_MsgUndelegate)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.MsgUndelegate.Equal(that1.MsgUndelegate) {
		return false
	}
	return true
}
func (this *QueuedMessage_MsgBeginRedelegate) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*QueuedMessage_MsgBeginRedelegate)
	if !ok {
		that2, ok := that.(QueuedMessage_MsgBeginRedelegate)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.MsgBeginRedelegate.Equal(that1.MsgBeginRedelegate) {
		return false
	}
	return true
}
func (m *QueuedMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueuedMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueuedMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Msg != nil {
		{
			size := m.Msg.Size()
			i -= size
			if _, err := m.Msg.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *QueuedMessage_MsgCreateValidator) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueuedMessage_MsgCreateValidator) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.MsgCreateValidator != nil {
		{
			size, err := m.MsgCreateValidator.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQueuedMessage(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}
func (m *QueuedMessage_MsgDelegate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueuedMessage_MsgDelegate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.MsgDelegate != nil {
		{
			size, err := m.MsgDelegate.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQueuedMessage(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *QueuedMessage_MsgUndelegate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueuedMessage_MsgUndelegate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.MsgUndelegate != nil {
		{
			size, err := m.MsgUndelegate.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQueuedMessage(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *QueuedMessage_MsgBeginRedelegate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueuedMessage_MsgBeginRedelegate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.MsgBeginRedelegate != nil {
		{
			size, err := m.MsgBeginRedelegate.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQueuedMessage(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	return len(dAtA) - i, nil
}
func encodeVarintQueuedMessage(dAtA []byte, offset int, v uint64) int {
	offset -= sovQueuedMessage(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *QueuedMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Msg != nil {
		n += m.Msg.Size()
	}
	return n
}

func (m *QueuedMessage_MsgCreateValidator) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MsgCreateValidator != nil {
		l = m.MsgCreateValidator.Size()
		n += 1 + l + sovQueuedMessage(uint64(l))
	}
	return n
}
func (m *QueuedMessage_MsgDelegate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MsgDelegate != nil {
		l = m.MsgDelegate.Size()
		n += 1 + l + sovQueuedMessage(uint64(l))
	}
	return n
}
func (m *QueuedMessage_MsgUndelegate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MsgUndelegate != nil {
		l = m.MsgUndelegate.Size()
		n += 1 + l + sovQueuedMessage(uint64(l))
	}
	return n
}
func (m *QueuedMessage_MsgBeginRedelegate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MsgBeginRedelegate != nil {
		l = m.MsgBeginRedelegate.Size()
		n += 1 + l + sovQueuedMessage(uint64(l))
	}
	return n
}

func sovQueuedMessage(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQueuedMessage(x uint64) (n int) {
	return sovQueuedMessage(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *QueuedMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQueuedMessage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueuedMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueuedMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgCreateValidator", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueuedMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQueuedMessage
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQueuedMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &types.MsgCreateValidator{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Msg = &QueuedMessage_MsgCreateValidator{v}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgDelegate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueuedMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQueuedMessage
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQueuedMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &types.MsgDelegate{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Msg = &QueuedMessage_MsgDelegate{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgUndelegate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueuedMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQueuedMessage
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQueuedMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &types.MsgUndelegate{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Msg = &QueuedMessage_MsgUndelegate{v}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgBeginRedelegate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueuedMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQueuedMessage
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQueuedMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &types.MsgBeginRedelegate{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Msg = &QueuedMessage_MsgBeginRedelegate{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQueuedMessage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQueuedMessage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQueuedMessage(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQueuedMessage
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQueuedMessage
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQueuedMessage
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQueuedMessage
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQueuedMessage
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQueuedMessage
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQueuedMessage        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQueuedMessage          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQueuedMessage = fmt.Errorf("proto: unexpected end of group")
)
