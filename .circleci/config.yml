# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@8.2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-test:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    machine:
      image: ubuntu-2204:2022.10.1
      resource_class: large
    steps:
      - checkout
      - run:
          name: Print Go environment
          command: "go env"
      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - go-mod-v6-{{ checksum "go.sum" }}
      - run:
          name: Build babylond
          command: make build
      - save_cache:
          key: go-mod-v6-{{ checksum "go.sum" }}
          paths:
            - "/home/circleci/.go_workspace/pkg/mod"
      - run:
          name: Run tests
          command: |
            make test
      - run: # sudo is needed, so that integration test binary have proper access to nodes keyring
          name: Run integration tests
          command: |
            make localnet-start-test
            sudo -E env "PATH=$PATH" make test-babylon-integration
            make localnet-stop
      # TODO: If CI tests will take to long consider having only this e2e test
      # instead of separate integration tests and e2e tests.
      - run:
          name: Run e2e tests
          command: |
             make test-e2e
  lint:
    machine:
      image: ubuntu-2204:2022.10.1
      resource_class: medium
    steps:
      - checkout
      - run:
          name: Lint
          command: |
            curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.50.1
            ./bin/golangci-lint run

  build_docker:
    machine:
      image: ubuntu-2204:2022.10.1
      resource_class: large
    steps:
      - checkout
      - aws-ecr/build-image:
          push-image: false
          dockerfile: Dockerfile
          path: ./contrib/images/babylond-env/
          build-path: ./
          tag: "$CIRCLE_SHA1,$CIRCLE_TAG"
          repo: "babylond"
      - run:
          name: Save Docker image to export it to workspace
          command: |
            docker save $(docker image ls --format '{{.Repository}}:{{.Tag}}') > /tmp/babylond.tar
      - persist_to_workspace:
          root: /tmp
          paths:
            - babylond.tar

  push_docker:
    machine:
      image: ubuntu-2204:2022.10.1
      resource_class: large
    steps:
      - attach_workspace:
          at: /tmp
      - run:
          name: Load Docker image from workspace
          command: |
            docker load -i /tmp/babylond.tar
      - aws-ecr/ecr-login:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          region: "$AWS_REGION"
      - aws-ecr/push-image:
          registry-id: AWS_ECR_REGISTRY_ID
          region: "$AWS_REGION"
          repo: "babylond"
          tag: "$CIRCLE_SHA1,$CIRCLE_TAG"

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  version: 2
  build-test:
    jobs:
      - build-test
  lint:
    jobs:
      - lint
  docker:
    jobs:
      - build_docker:
          filters:
            tags:
              only: /.*/
      - push_docker:
          requires:
            - build_docker
          filters:
            tags:
              only: /.*/
            branches:
              only:
                - main
